version: '3.8'

services:
  fiber-app:
    build: .
    container_name: fiber-app
    ports:
      - "3002:3002"
    depends_on:
      - db
      - kafka
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: mysecret
      DB_NAME: mydb
      DB_PORT: 5432
    volumes:
      - app_volumes:/app
    networks:
      - fiber-network
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - fiber-network
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - fiber-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - fiber-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LISTENER_PORT_INSIDE: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      PATH: "/usr/bin:${PATH}"
    networks:
      - fiber-network

  kafka-admin:
    build:
      context: .
      dockerfile: Dockerfile.kafka-admin
    container_name: kafka-admin
    depends_on:
      - kafka
    networks:
      - fiber-network
    environment:
      - KAFKA_BROKER=kafka:9092

  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer  # âœ… Use the separate consumer Dockerfile
    environment:
      DB_HOST: db
      DB_USER: postgres
      DB_PASSWORD: mysecret
      DB_NAME: mydb
      DB_PORT: 5432
    depends_on:
      - kafka
      - db
      - redis
      - fiber-app
    restart: always
    networks:
      - fiber-network


volumes:
  db_data:
  app_volumes:
  
networks:
  fiber-network:
    driver: bridge